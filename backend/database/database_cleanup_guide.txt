# 보행 분석 앱 데이터베이스 완전 재구성 가이드
# CREATED: 2024-12-19 - 전체 데이터베이스 처음부터 재구성 가이드

## 🚨 주의사항
- 이 과정은 **모든 기존 데이터를 삭제**합니다!
- 실행 전 반드시 **백업**을 수행하세요!
- 시간대 문제가 완전히 해결됩니다!

## 📋 실행 전 체크리스트

### 1. 데이터 백업 (필수!)
```bash
# PostgreSQL 백업
pg_dump -h [호스트] -U [사용자명] -d [데이터베이스명] > backup_$(date +%Y%m%d_%H%M%S).sql

# 또는 Supabase 대시보드에서 백업 생성
```

### 2. 애플리케이션 중단
```bash
# 백엔드 서버 중단
pkill -f "python"
# 또는 실행 중인 프로세스 종료
```

### 3. 데이터베이스 연결 확인
- PostgreSQL/Supabase 접속 가능한지 확인
- 관리자 권한 있는지 확인

## 🚀 실행 방법

### 방법 1: SQL 에디터에서 직접 실행
1. PostgreSQL 클라이언트 또는 Supabase SQL Editor 접속
2. `complete_database_setup.sql` 파일 내용 복사
3. **영구 시간대 설정 부분 수정**:
   ```sql
   -- 이 라인의 주석을 해제하고 실제 DB 이름으로 변경
   ALTER DATABASE your_actual_database_name SET timezone = 'Asia/Seoul';
   ```
4. 전체 스크립트 실행

### 방법 2: 명령줄에서 실행
```bash
# PostgreSQL 직접 연결
psql -h [호스트] -U [사용자명] -d [데이터베이스명] -f complete_database_setup.sql

# 또는 파이프로 실행
cat complete_database_setup.sql | psql -h [호스트] -U [사용자명] -d [데이터베이스명]
```

## 📊 실행 결과 확인

### 성공적인 실행 시 마지막에 다음과 같은 결과가 나타납니다:

```
| step                  | total_tables |
| --------------------- | ------------ |
| Table Creation Check  | 11           |

| step               | table_name              | column_name        | data_type                |
| ------------------ | ----------------------- | ------------------ | ------------------------ |
| Timezone Data Types| analysis_results        | analysis_timestamp | timestamp with time zone |
| Timezone Data Types| analysis_results        | created_at         | timestamp with time zone |
| ...                | ...                     | ...                | ...                      |

| step              | table_name     | record_count |
| ----------------- | -------------- | ------------ |
| Sample Data Check | users          | 2            |
| Sample Data Check | gait_rag_data  | 5            |
| Sample Data Check | analysis_results| 2           |

| step                 | timezone_setting | offset_hours | timezone_status                    |
| -------------------- | ---------------- | ------------ | ---------------------------------- |
| Final Timezone Check| Asia/Seoul       | 9            | Asia/Seoul (+09:00) - Perfect! ✅  |

| message                        | details                                                    |
| ------------------------------ | ---------------------------------------------------------- |
| 🎉 DATABASE SETUP COMPLETE! 🎉 | All tables, indexes, views, and sample data created successfully. |
```

## 🔧 생성되는 구조

### 기본 테이블 (8개)
- `users` - 사용자 정보
- `user_health_info` - 사용자 건강 정보 (BMI 자동 계산)
- `imu_data` - IMU 센서 데이터
- `embedding_data` - 임베딩 데이터
- `analysis_results` - 보행 분석 결과 (개선된 버전)
- `chat_history` - 채팅 히스토리
- `gait_rag_data` - 보행 RAG 데이터
- `fall_data` - 낙상 감지 데이터

### 고급 테이블 (4개)
- `langchain_analysis_sessions` - 랭체인 분석 세션
- `model_performance_logs` - AI 모델 성능 추적
- `user_feedback` - 사용자 피드백
- `notifications` - 실시간 알림

### 자동화 기능
- BMI 자동 계산 트리거
- updated_at 자동 업데이트 트리거
- 성능 최적화 인덱스들
- 사용자 대시보드 뷰
- 분석 결과 상세 뷰

### 샘플 데이터
- 2명의 테스트 사용자
- 5가지 보행 패턴 데이터
- 샘플 분석 결과
- 알림 및 피드백 데이터

## ✅ 검증 방법

### 1. 시간대 확인
```sql
SELECT 
    current_setting('timezone') AS timezone,
    EXTRACT(TIMEZONE FROM NOW()::TIMESTAMPTZ) / 3600 AS offset_hours;
-- 결과: timezone = 'Asia/Seoul', offset_hours = 9
```

### 2. 테이블 구조 확인
```sql
SELECT table_name FROM information_schema.tables 
WHERE table_schema = 'public' AND table_type = 'BASE TABLE'
ORDER BY table_name;
-- 11개 테이블이 모두 나타나야 함
```

### 3. 샘플 데이터 확인
```sql
SELECT * FROM user_dashboard_view;
-- 2명의 사용자 정보가 나타나야 함
```

## 🔄 애플리케이션 재시작

### 1. 백엔드 서버 재시작
```bash
cd gait-analysis-app/backend
python app/main.py
```

### 2. 연결 테스트
- API 엔드포인트 접속 확인
- 데이터베이스 연결 확인
- 시간대 정상 작동 확인

## 🆘 문제 해결

### 권한 오류
```
ERROR: permission denied
```
**해결**: 데이터베이스 소유자 권한으로 실행

### 외래키 오류
```
ERROR: cannot drop table because other objects depend on it
```
**해결**: CASCADE 옵션이 포함되어 있으므로 정상적으로 처리됨

### 시간대 설정 실패
```
timezone_status: Timezone needs adjustment ⚠️
```
**해결**: 
1. `ALTER DATABASE` 명령의 주석 해제
2. 실제 데이터베이스 이름으로 변경
3. 스크립트 재실행

## 🎯 완료 후 혜택

✅ **시간대 문제 완전 해결** - Asia/Seoul 영구 설정  
✅ **최신 스키마 적용** - 모든 개선사항 포함  
✅ **성능 최적화** - 인덱스 및 뷰 자동 생성  
✅ **샘플 데이터 제공** - 즉시 테스트 가능  
✅ **자동화 기능** - BMI 계산, 시간 업데이트 등  
✅ **깔끔한 시작** - 불필요한 데이터 없음  

이제 시간대 문제 없이 깔끔하게 보행 분석 앱을 시작할 수 있습니다! 🎉 