=============================================================================
데이터베이스 외래키 제약조건 오류 해결 가이드
오류: Key (user_id)=(raspberry_pi_01) is not present in table "users"
=============================================================================

## 문제 분석
로그에서 확인된 오류:
- 오류 코드: 23503
- 메시지: insert or update on table "imu_data" violates foreign key constraint "imu_data_user_id_fkey"
- 원인: raspberry_pi_01 사용자가 users 테이블에 존재하지 않음

## 추가 오류 해결
ON CONFLICT 오류:
- 오류 코드: 42P10
- 메시지: there is no unique or exclusion constraint matching the ON CONFLICT specification
- 원인: user_id 컬럼에 UNIQUE 제약조건이 없거나 ON CONFLICT 구문 사용 불가
- 해결: 조건부 INSERT 또는 DO 블록 사용

## 해결 방법

### 1. 즉시 해결 (간단한 스크립트 실행) ⭐ 추천
```bash
# Supabase 대시보드 SQL 에디터에서 실행
fix_raspberry_pi_user_simple.sql
```

### 2. 조건부 INSERT 방식 (수정된 스크립트)
```sql
-- 라즈베리파이 사용자 추가 (조건부)
INSERT INTO users (user_id, name, email) 
SELECT 'raspberry_pi_01', 'Raspberry Pi Device 01', 'raspberry_pi_01@device.local'
WHERE NOT EXISTS (
    SELECT 1 FROM users WHERE user_id = 'raspberry_pi_01'
);
```

### 3. DO 블록 방식 (가장 안전)
```sql
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM users WHERE user_id = 'raspberry_pi_01') THEN
        INSERT INTO users (user_id, name, email) VALUES 
        ('raspberry_pi_01', 'Raspberry Pi Device 01', 'raspberry_pi_01@device.local');
        RAISE NOTICE 'raspberry_pi_01 사용자가 생성되었습니다.';
    ELSE
        RAISE NOTICE 'raspberry_pi_01 사용자가 이미 존재합니다.';
    END IF;
END $$;
```

### 4. 자동 해결 (코드 수정 완료)
- WebSocketManager.ensure_user_exists() 메서드 추가
- SupabaseClient에 사용자 생성 메서드들 추가
- IMU 데이터 처리 전 사용자 존재 여부 자동 확인

## 사용 가능한 스크립트 파일들

### 1. fix_raspberry_pi_user_simple.sql ⭐ 추천
- DO 블록 사용으로 가장 안전
- 실행 결과 메시지 출력
- 오류 없이 실행 가능

### 2. fix_raspberry_pi_user.sql
- 조건부 INSERT 사용
- 여러 디바이스 동시 생성
- 검증 쿼리 포함

### 3. complete_database_setup.sql (업데이트됨)
- 전체 데이터베이스 설정 시 라즈베리파이 사용자 포함
- 새로 설치할 때 사용

## 실행 순서

### Supabase 대시보드에서:
1. SQL Editor 열기
2. `fix_raspberry_pi_user_simple.sql` 내용 복사
3. 실행 (Run)
4. 결과 확인

### 명령줄에서 (psql 사용 시):
```bash
psql -h [SUPABASE_HOST] -U [USERNAME] -d [DATABASE] -f fix_raspberry_pi_user_simple.sql
```

## 수정된 파일들

### 1. gait-analysis-app/backend/app/core/websocket_manager.py
- `ensure_user_exists()` 메서드 추가
- IMU 데이터 처리 전 사용자 자동 생성 기능

### 2. gait-analysis-app/backend/database/supabase_client.py
- `get_user_by_id()` 메서드 추가
- `create_user()` 메서드 추가
- `create_user_health_info()` 메서드 추가

### 3. gait-analysis-app/backend/database/fix_raspberry_pi_user_simple.sql ⭐ 신규
- DO 블록 사용으로 안전한 실행
- 실행 결과 메시지 포함

### 4. gait-analysis-app/backend/database/fix_raspberry_pi_user.sql (수정됨)
- ON CONFLICT 제거, 조건부 INSERT 사용

### 5. gait-analysis-app/backend/database/complete_database_setup.sql (업데이트됨)
- 라즈베리파이 사용자들 기본 포함

## 예방 조치

### 1. 사용자 자동 생성 로직
```python
async def ensure_user_exists(self, user_id: str):
    """사용자 존재 여부 확인 및 자동 생성"""
    existing_user = await supabase_client.get_user_by_id(user_id)
    if not existing_user:
        # 자동으로 사용자 생성
        await supabase_client.create_user(user_data)
```

### 2. 디바이스 등록 프로세스
- 새로운 라즈베리파이 디바이스 연결 시 자동 사용자 생성
- 디바이스별 고유 ID 관리
- 기본 설정값 자동 적용

### 3. 오류 처리 강화
- 외래키 제약조건 오류 발생 시 자동 복구
- 로그 모니터링 및 알림 시스템
- 데이터 무결성 검증

## 테스트 방법

### 1. 사용자 존재 확인
```sql
SELECT user_id, name, email FROM users WHERE user_id LIKE 'raspberry_pi_%';
```

### 2. 외래키 제약조건 확인
```sql
SELECT COUNT(*) as orphaned_records 
FROM imu_data 
WHERE user_id NOT IN (SELECT user_id FROM users);
```

### 3. 최근 데이터 확인
```sql
SELECT user_id, COUNT(*) as record_count, MAX(timestamp) as latest_timestamp
FROM imu_data 
WHERE user_id = 'raspberry_pi_01'
GROUP BY user_id;
```

## 모니터링

### 1. 로그 확인 포인트
- "사용자 {user_id}가 존재하지 않습니다. 자동 생성합니다."
- "사용자 {user_id} 자동 생성 완료"
- "IMU 데이터 저장 실패" 오류 감소 확인

### 2. 성능 지표
- 외래키 제약조건 오류 발생 빈도
- 사용자 자동 생성 성공률
- IMU 데이터 저장 성공률

### 3. 알림 설정
- 새로운 디바이스 연결 시 알림
- 사용자 생성 실패 시 알림
- 데이터베이스 오류 발생 시 알림

## 추가 개선사항

### 1. 디바이스 관리 시스템
- 디바이스 등록/해제 API
- 디바이스 상태 모니터링
- 디바이스별 설정 관리

### 2. 데이터 백업
- 실시간 CSV 백업 유지
- 데이터베이스 정기 백업
- 오류 발생 시 복구 절차

### 3. 보안 강화
- 디바이스 인증 시스템
- API 키 관리
- 접근 권한 제어

=============================================================================
수정 완료 시간: 2025-01-27
수정자: AI Assistant
최종 업데이트: ON CONFLICT 오류 해결 및 새로운 스크립트 추가
============================================================================= 